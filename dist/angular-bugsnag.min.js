/**! 
 * @license angular-bugsnag v0.2.1
 * Copyright (c) 2013 Luke Bunselmeyer <wmlukeb@gmail.com>. https://github.com/wmluke/angular-bugsnag
 * License: MIT
 */
!function(){"use strict";var t;angular.module("angular-bugsnag",[]).config(["$provide",function(n){n.provider({bugsnag:function(){var n=window.Bugsnag||{notifyException:function(){},notify:function(){},noConflict:function(){}};t=n;var o,e=this;this.noConflict=function(){return t=n.noConflict(),e},this.apiKey=function(n){return t.apiKey=n,e},this.releaseStage=function(n){return t.releaseStage=n,e},this.notifyReleaseStages=function(n){return t.notifyReleaseStages=n,e},this.appVersion=function(n){return t.appVersion=n,e},this.user=function(n){return t.user=n,e},this.projectRoot=function(n){return t.projectRoot=n,e},this.endpoint=function(n){return t.endpoint=n,e},this.metaData=function(n){return t.metaData=n,e},this.autoNotify=function(n){return t.autoNotify=n,e},this.beforeNotify=function(t){return o=t,e},this._testRequest=function(n){return t.testRequest=n,e},this.$get=["$injector",function(n){return o&&(t.beforeNotify=angular.isString(o)?n.get(o):n.invoke(o)),t}]},$exceptionHandler:function(){this.$get=["$log","bugsnag",function(t,n){return function(o){t.error.apply(t,arguments);try{n.fixContext(),angular.isString(o)?n.notify(o):n.notifyException(o)}catch(e){t.error(e)}if("AssertionError"===o.name)throw o}}]}})}]).run(["bugsnag","$location","$rootScope",function(t,n,o){t.fixContext=function(){t.context=n.url()},o.$on("$locationChangeSuccess",t.refresh||angular.noop)}])}();